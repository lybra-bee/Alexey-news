#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import datetime
import os

class NewsGenerator:
    def __init__(self):
        self.hf_token = os.environ.get('HF_API_TOKEN', '')
        self.api_url = "https://api-inference.huggingface.co/models/microsoft/DialoGPT-large"
        print(f"–¢–æ–∫–µ–Ω HF: {'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if self.hf_token else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        
    def generate_article(self):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏"""
        try:
            if not self.hf_token:
                print("‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –∫–æ–Ω—Ç–µ–Ω—Ç")
                return self.create_fallback_content()
            
            headers = {"Authorization": f"Bearer {self.hf_token}", "Content-Type": "application/json"}
            
            prompt = """
–°–æ–∑–¥–∞–π —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—É—é –Ω–æ–≤–æ—Å—Ç–Ω—É—é —Å—Ç–∞—Ç—å—é –æ–±—ä–µ–º–æ–º 600-800 —Å–ª–æ–≤ –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö –≤ –æ–±–ª–∞—Å—Ç–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –∏ –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π. 
–°—Ç–∞—Ç—å—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–π –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω–æ–π, –æ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏ –∏ developments –≤ —ç—Ç–æ–π —Å—Ñ–µ—Ä–µ.
–í–∫–ª—é—á–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –º–Ω–µ–Ω–∏—è, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π —è–≤–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ä–∞–∑–¥–µ–ª–æ–≤ —Ç–∏–ø–∞ "–í–≤–µ–¥–µ–Ω–∏–µ", "–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å", "–ó–∞–∫–ª—é—á–µ–Ω–∏–µ".
            """
            
            payload = {
                "inputs": prompt,
                "parameters": {
                    "max_length": 800,
                    "temperature": 0.8,
                    "do_sample": True,
                    "return_full_text": False
                }
            }
            
            print("üîÑ –ó–∞–ø—Ä–æ—Å –∫ API...")
            response = requests.post(self.api_url, headers=headers, json=payload, timeout=30)
            
            if response.status_code == 200:
                result = response.json()
                if isinstance(result, list) and len(result) > 0:
                    print("‚úÖ –°—Ç–∞—Ç—å—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ API")
                    article = result[0]['generated_text']
                    # –£–±–∏—Ä–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ —è–≤–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
                    article = article.replace("–í–≤–µ–¥–µ–Ω–∏–µ:", "").replace("–ó–∞–∫–ª—é—á–µ–Ω–∏–µ:", "")
                    article = article.replace("–í–≤–µ–¥–µ–Ω–∏–µ", "").replace("–ó–∞–∫–ª—é—á–µ–Ω–∏–µ", "")
                    return article
            
            return self.create_fallback_content()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            return self.create_fallback_content()
    
    def create_fallback_content(self):
        """–†–µ–∑–µ—Ä–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç"""
        themes = [
            """–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–≤—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç —Å—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è, –æ—Ç–∫—Ä—ã–≤–∞—è –Ω–æ–≤—ã–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã –≤ –æ–±–ª–∞—Å—Ç–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞. –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –º–µ—Å—è—Ü—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Ä—ã–≤–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω–æ –º–µ–Ω—è—é—Ç –ø–æ–¥—Ö–æ–¥ –∫ –º–∞—à–∏–Ω–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é.

–û–¥–Ω–∏–º –∏–∑ –Ω–∞–∏–±–æ–ª–µ–µ –∑–Ω–∞—á–∏–º—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Å—Ç–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—Ç –±–µ—Å–ø—Ä–µ—Ü–µ–¥–µ–Ω—Ç–Ω—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞. –≠—Ç–∏ –º–æ–¥–µ–ª–∏ –Ω–µ —Ç–æ–ª—å–∫–æ —É–ª—É—á—à–∞—é—Ç –∫–∞—á–µ—Å—Ç–≤–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞, –Ω–æ –∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —Å–Ω–∏–∂–∞—é—Ç –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –∏—Ö –±–æ–ª–µ–µ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–ª—è —à–∏—Ä–æ–∫–æ–≥–æ –∫—Ä—É–≥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.

–í —Å—Ñ–µ—Ä–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –∑—Ä–µ–Ω–∏—è —Ç–∞–∫–∂–µ –Ω–∞–±–ª—é–¥–∞—é—Ç—Å—è —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è. –ù–æ–≤—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –¥–æ—Å—Ç–∏–≥–∞—Ç—å –≤—ã—Å–æ—á–∞–π—à–µ–π —Ç–æ—á–Ω–æ—Å—Ç–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤ –¥–∞–∂–µ –≤ —É—Å–ª–æ–≤–∏—è—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –≠—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è AI –≤ —Ç–∞–∫–∏—Ö –æ–±–ª–∞—Å—Ç—è—Ö, –∫–∞–∫ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è.

–≠–∫—Å–ø–µ—Ä—Ç—ã –æ—Ç–º–µ—á–∞—é—Ç, —á—Ç–æ –≤–∞–∂–Ω—ã–º —Ç—Ä–µ–Ω–¥–æ–º —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ä–∞–∑–≤–∏—Ç–∏–µ –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º, —Å–ø–æ—Å–æ–±–Ω—ã—Ö –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–µ–∫—Å—Ç, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –∞—É–¥–∏–æ. –¢–∞–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—Ç —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—É—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫ –ø–æ–Ω–∏–º–∞–Ω–∏—é –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–≥–µ—Ä–µ–Ω—Ç–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ across different modalities.

–°–æ–æ–±—â–µ—Å—Ç–≤–æ open-source –≤–Ω–æ—Å–∏—Ç –Ω–µ–æ—Ü–µ–Ω–∏–º—ã–π –≤–∫–ª–∞–¥ –≤ —Ä–∞–∑–≤–∏—Ç–∏–µ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã. –ü—Ä–æ–µ–∫—Ç—ã –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö —Ç–∏–ø–∞ Hugging Face —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º –¥–µ-—Ñ–∞–∫—Ç–æ, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è–º –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–¥–æ–≤—ã–º –º–æ–¥–µ–ª—è–º –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º.

–ë—É–¥—É—â–µ–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –≤—ã–≥–ª—è–¥–∏—Ç —á—Ä–µ–∑–≤—ã—á–∞–π–Ω–æ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω–æ. –û–∂–∏–¥–∞–µ—Ç—Å—è, —á—Ç–æ –≤ –±–ª–∏–∂–∞–π—à–∏–µ –≥–æ–¥—ã –º—ã —Å—Ç–∞–Ω–µ–º —Å–≤–∏–¥–µ—Ç–µ–ª—è–º–∏ –µ—â–µ –±–æ–ª–µ–µ –≤–ø–µ—á–∞—Ç–ª—è—é—â–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–æ–±—Ä–∞–∑—É—é—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –æ—Ç—Ä–∞—Å–ª–µ–π –∏ —É–ª—É—á—à–∞—Ç –∫–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏ –ª—é–¥–µ–π –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É.""",

            """–ü—Ä–æ–≥—Ä–µ—Å—Å –≤ –æ–±–ª–∞—Å—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –¥–æ—Å—Ç–∏–≥ –±–µ—Å–ø—Ä–µ—Ü–µ–¥–µ–Ω—Ç–Ω—ã—Ö –º–∞—Å—à—Ç–∞–±–æ–≤. –í—Å–µ–≥–æ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–≤–∞—Ä—Ç–∞–ª –±—ã–ª–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω–æ –º–µ–Ω—è—é—Ç –ª–∞–Ω–¥—à–∞—Ñ—Ç –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è.

–Ø–∑—ã–∫–æ–≤—ã–µ –º–æ–¥–µ–ª–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—Ç —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫ –≥–ª—É–±–æ–∫–æ–º—É –ø–æ–Ω–∏–º–∞–Ω–∏—é –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —á–µ–ª–æ–≤–µ–∫–æ–ø–æ–¥–æ–±–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞. –≠—Ç–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –±–ª–∞–≥–æ–¥–∞—Ä—è —É—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–Ω—ã–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞–º –∏ –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º –º–µ—Ç–æ–¥–∞–º –æ–±—É—á–µ–Ω–∏—è.

–í –æ–±–ª–∞—Å—Ç–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –∑—Ä–µ–Ω–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–±–∏–ª–∏—Å—å –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ø–µ—Ö–æ–≤ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∏—Å—Ç–µ–º, —Å–ø–æ—Å–æ–±–Ω—ã—Ö accurately –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω—ã. –≠—Ç–æ –∏–º–µ–µ—Ç profound implications –¥–ª—è —Ç–∞–∫–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –∫–∞–∫ augmented reality, autonomous navigation –∏ automated quality control.

–í–∞–∂–Ω—ã–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Ä–∞–∑–≤–∏—Ç–∏—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è focus –Ω–∞ —ç—Ç–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã AI. –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—Å–µ –±–æ–ª—å—à–µ attention —É–¥–µ–ª—è—é—Ç –≤–æ–ø—Ä–æ—Å–∞–º fairness, transparency –∏ accountability —Å–≤–æ–∏—Ö —Å–∏—Å—Ç–µ–º, —á—Ç–æ —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç responsible development —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.

–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è AI —Å –¥—Ä—É–≥–∏–º–∏ emerging technologies, —Ç–∞–∫–∏–º–∏ –∫–∞–∫ quantum computing –∏ neuromorphic hardware, –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –µ—â–µ –±–æ–ª–µ–µ powerful –∏ efficient —Å–∏—Å—Ç–µ–º.

–°–æ–æ–±—â–µ—Å—Ç–≤–æ researchers –∏ developers –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ collaborate —á–µ—Ä–µ–∑ open-source platforms, accelerating pace innovation –∏ democratizing access –∫ –ø–µ—Ä–µ–¥–æ–≤—ã–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º.

–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã —Ä–∞–∑–≤–∏—Ç–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –æ—Å—Ç–∞—é—Ç—Å—è extremely promising. Continuous advancements –≤ algorithms, hardware –∏ methodologies –æ–±–µ—â–∞—é—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –µ—â–µ –±–æ–ª–µ–µ sophisticated –∏ capable —Å–∏—Å—Ç–µ–º –≤ near future."""
        ]
        
        current_theme = themes[datetime.datetime.now().day % len(themes)]
        return current_theme
    
    def generate_image(self):
        """–ü—Ä–æ—Å—Ç–∞—è –Ω–∞–¥–µ–∂–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞"""
        print("üñºÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
        return "https://via.placeholder.com/800x400/2c3e50/ecf0f1?text=AI+Neural+Networks+News"
    
    def format_html(self, content, image_url=None):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ HTML"""
        if not image_url:
            image_html = '<div class="image-placeholder">üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ–∑–∂–µ</div>'
        else:
            image_html = f'<img src="{image_url}" alt="–ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è –∫ —Å—Ç–∞—Ç—å–µ –æ –Ω–µ–π—Ä–æ—Å–µ—Ç—è—Ö" style="max-width: 100%; border-radius: 8px; box-shadow: 0 4px 8px rgba(0,0,0,0.1); margin: 20px 0;">'
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –±–µ–∑ —è–≤–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        html_content = content.replace('\n\n', '</p><p>')
        html_content = html_content.replace('\n', '<br>')
        
        return f"""
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ù–æ–≤–æ—Å—Ç–∏ AI</title>
    <style>
        body {{
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 20px;
            background: white;
            line-height: 1.6;
        }}
        .news-container {{
            max-width: 800px;
            margin: 0 auto;
        }}
        .image-placeholder {{
            background: #ecf0f1;
            padding: 60px;
            text-align: center;
            border-radius: 8px;
            margin: 20px 0;
            font-size: 18px;
            color: #7f8c8d;
        }}
        .footer {{
            margin-top: 30px;
            padding-top: 15px;
            border-top: 1px solid #ddd;
            color: #7f8c8d;
            font-size: 14px;
        }}
        p {{
            margin: 15px 0;
            text-align: justify;
            font-size: 16px;
        }}
        .content {{
            background: #f8f9fa;
            padding: 25px;
            border-radius: 8px;
            border-left: 4px solid #3498db;
        }}
        img {{
            transition: transform 0.3s ease;
        }}
        img:hover {{
            transform: scale(1.02);
        }}
    </style>
</head>
<body>
    <div class="news-container">
        {image_html}
        <div class="content">
            <p>{html_content}</p>
        </div>
        <div class="footer">
            –û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
        </div>
    </div>
</body>
</html>
        """
    
    def update_news(self):
        """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π"""
        print("üîÑ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏...")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ç—å—é
        article_content = self.generate_article()
        print("‚úÖ –°—Ç–∞—Ç—å—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        image_url = self.generate_image()
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤ HTML
        html_content = self.format_html(article_content, image_url)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º
        with open('current-news.html', 'w', encoding='utf-8') as f:
            f.write(html_content)
        
        print("‚úÖ –§–∞–π–ª current-news.html –æ–±–Ω–æ–≤–ª–µ–Ω")
        return True

if __name__ == "__main__":
    generator = NewsGenerator()
    success = generator.update_news()
    
    if success:
        print("üéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
